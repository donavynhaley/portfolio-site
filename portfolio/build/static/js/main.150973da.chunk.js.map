{"version":3,"sources":["assets/download.svg","common/Button.js","assets/resume.pdf","sections/Navbar.js","assets/avataaars.svg","assets/brackets.svg","common/Divider.js","sections/Home.js","assets/github.svg","assets/globe.svg","assets/plus.svg","common/Project.js","assets/projects/chess.png","assets/projects/emotion.png","assets/projects/water.png","sections/Portfolio.js","assets/close.svg","assets/projects/chessScreen.png","assets/projects/waterScreen.png","assets/projects/emotionScreen.png","assets/socials/github.svg","assets/socials/dev.svg","common/Modal.js","sections/About.js","assets/check.svg","assets/error.svg","sections/Contact.js","common/Toast.js","assets/socials/linkedin.svg","sections/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","clickFunction","svg","addClass","className","undefined","onClick","src","downloadSVG","alt","Navbar","useState","shrink","setShrink","activePortfolio","setActivePortfolio","activeAbout","setActiveAbout","activeContact","setActiveContact","useEffect","window","addEventListener","scrollY","top","pageYOffset","windowHeight","innerHeight","totalDocScrollLength","getDocHeight","scrollPostion","Math","floor","max","document","body","scrollHeight","documentElement","offsetHeight","clientHeight","id","href","resume","download","Divider","isDark","brackets","Home","headshot","Project","props","title","img","githubLink","liveLink","openModal","setModalType","modalType","target","rel","githubIcon","globeIcon","plus","Portfolio","chess","water","emotion","Modal","showModal","setShowModal","modalRef","useRef","modals","desc","bullets","chessScreen","technologies","name","link","github","live","devto","waterScreen","emotionScreen","animation","useSpring","config","duration","opacity","e","current","ref","div","style","map","item","i","length","githubSVG","globeSVG","devSVG","closeSVG","prev","About","ContactSchema","Yup","shape","required","email","message","min","initialFormValues","Contact","toastList","setToastList","toastCount","setToastCount","addToast","isSuccess","toast","description","backgroundColor","icon","checkIcon","errorIcon","newToastList","push","initialValues","validationSchema","onSubmit","values","data","service_id","process","template_id","user_id","template_params","axios","post","then","response","catch","error","sendEmail","Object","keys","forEach","key","resetForm","errors","touched","placeholder","type","namemaile","as","Toast","filter","Footer","linkedinSVG","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.150973da.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/download.1a35218e.svg\";","import React from 'react'\nimport downloadSVG from '../assets/download.svg'\nconst Button = ({ text, clickFunction, svg, addClass }) => {\n    return (\n        <button className={`btn btn-primary ${addClass !== undefined ? addClass : \"\"}`} onClick={clickFunction}>\n            {text}\n            {svg === true ? <img className=\"btn-svg\" src={downloadSVG} alt=\"X\" /> : null}\n\n        </button>\n    )\n}\n\nexport default Button\n","export default __webpack_public_path__ + \"static/media/resume.ad0afa46.pdf\";","import React, { useState, useEffect } from 'react'\nimport Button from '../common/Button'\nimport resume from '../assets/resume.pdf'\n\nconst Navbar = () => {\n    const [shrink, setShrink] = useState(false);\n    const [activePortfolio, setActivePortfolio] = useState(false);\n    const [activeAbout, setActiveAbout] = useState(false);\n    const [activeContact, setActiveContact] = useState(false);\n\n    // shrinks navbar if user scrolls down\n    useEffect(() => {\n        window.addEventListener('scroll', () => {\n            setShrink(window.scrollY > 0);\n\n\n            const top = window.pageYOffset;\n            const windowHeight = window.innerHeight;\n            const docHeight = getDocHeight();\n\n            const totalDocScrollLength = docHeight - windowHeight;\n            const scrollPostion = Math.floor(top / totalDocScrollLength * 100);\n\n            // 18 69 85\n            const portfolioPage = 18;\n            const aboutPage = 69;\n            const contactPage = 85;\n            setActivePortfolio(scrollPostion >= portfolioPage && scrollPostion < aboutPage)\n            setActiveAbout(scrollPostion >= aboutPage && scrollPostion < contactPage)\n            setActiveContact(scrollPostion >= contactPage)\n        })\n    })\n\n    // gets max for total docheight\n    const getDocHeight = () => {\n        return Math.max(\n            document.body.scrollHeight, document.documentElement.scrollHeight,\n            document.body.offsetHeight, document.documentElement.offsetHeight,\n            document.body.clientHeight, document.documentElement.clientHeight\n        );\n    }\n\n    return (\n        <nav className={`nav-container ${shrink ? \"navbar-shrink\" : \"\"} `} id=\"#mainNav\">\n            <div className=\"navbar\">\n                <a className=\"name\" href=\"#home\">Donavyn Haley</a>\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <a className={`nav-link ${activePortfolio ? \"active\" : \"\"}`} href=\"#portfolio\">Portfolio</a>\n                    </li>\n                    <li className={`nav-link ${activeAbout ? \"active\" : \"\"}`}>\n                        <a className=\"nav-link\" href=\"#about\">About</a>\n                    </li>\n                    <li className={`nav-link ${activeContact ? \"active\" : \"\"}`}>\n                        <a className=\"nav-link\" href=\"#contact\">Contact</a>\n                    </li>\n                    <li className=\"nav-item\" id=\"resume\">\n                        <a href={resume} download>\n                            <Button svg={true} text=\"Resume\" />\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n\n    )\n}\n\nexport default Navbar\n","export default __webpack_public_path__ + \"static/media/avataaars.6d84e9b7.svg\";","export default __webpack_public_path__ + \"static/media/brackets.d3d9210e.svg\";","import React from 'react'\nimport brackets from \"../assets/brackets.svg\"\n\nconst Divider = ({isDark}) => {\n    \n    return (\n        <div className={`divider-custom ${isDark ? \"divider-dark\" : \"\"}` }>\n            <div className=\"divider-custom-line left\" />\n            <div className=\"divider-custom-icon\" >\n                <img className={`brackets ${isDark ? \"\" : \"brackets-white\"}`} src={brackets} alt=\"brackets\" />\n            </div>\n            <div className=\"divider-custom-line right\" />\n        </div>\n    )\n}\n\nexport default Divider\n","import React from 'react'\nimport headshot from \"../assets/avataaars.svg\"\nimport Divider from \"../common/Divider\"\nconst Home = () => {\n    return (\n        <section className=\"home-container\">\n            <div className=\"home-contents\">\n                <img className=\"headshot\" src={headshot} alt=\"headshot\" />\n                <h1 className=\"home-heading\">Donavyn Haley</h1>\n                <Divider isDark={false} />\n                <p className=\"home-subheading\">Web Developer - AI Enthusiast - Programmer</p>\n            </div>\n        </section>\n    )\n}\n\nexport default Home\n","export default __webpack_public_path__ + \"static/media/github.d205c6f8.svg\";","export default __webpack_public_path__ + \"static/media/globe.00145644.svg\";","export default __webpack_public_path__ + \"static/media/plus.68c26883.svg\";","import React from 'react'\nimport githubIcon from '../assets/github.svg'\nimport globeIcon from '../assets/globe.svg'\nimport plus from \"../assets/plus.svg\"\n\n\nconst Project = (props) => {\n    const { title, img, githubLink, liveLink, openModal, setModalType, modalType } = props;\n    return (\n        <div className=\"project\">\n            <h3>{title}</h3>\n            <div className=\"portfolio-item\" >\n                <div className=\"item-caption\">\n                    <div className=\"item-caption-content\">\n                        <div className=\"icons\">\n                            <a href={githubLink} target=\"_blank\" rel=\"noreferrer\">\n                                <img src={githubIcon} alt=\"github icon\" />\n                            </a>\n                            <a href={liveLink} target=\"_blank\" rel=\"noreferrer\">\n                                <img src={globeIcon} alt=\"globe icon\" />\n                            </a>\n                        </div>\n                        <div className=\"click-modal\" onClick={() => {\n                            openModal();\n                            setModalType(modalType)\n                        }}>\n                            <img src={plus} alt=\"see more\" />\n                        </div>\n                    </div>\n                </div>\n                <img className=\"img-fluid\" src={img} alt=\"cabin\" />\n            </div>\n        </div>\n\n    )\n}\n\nexport default Project\n","export default __webpack_public_path__ + \"static/media/chess.ee7954e7.png\";","export default __webpack_public_path__ + \"static/media/emotion.43ecd9e7.png\";","export default __webpack_public_path__ + \"static/media/water.65656f1d.png\";","import React from 'react'\nimport Divider from '../common/Divider'\nimport Project from '../common/Project'\nimport chess from '../assets/projects/chess.png'\nimport emotion from '../assets/projects/emotion.png'\nimport water from '../assets/projects/water.png'\n\nconst Portfolio = ({ openModal, setModalType }) => {\n    return (\n        <div className=\"page-section portfolio\" id=\"portfolio\">\n            <div className=\"portfolio-container\">\n                <h2 className=\"section-heading\">Portfolio</h2>\n            </div>\n            <Divider isDark={true} />\n            <div className=\"projects\">\n                <Project title={\"Chess AI\"} img={chess} githubLink={\"https://github.com/donavynhaley/chess-ai\"} liveLink={\"https://developer.mozilla.org/en-US/docs/Web/CSS/position\"} openModal={openModal} setModalType={setModalType} modalType={0} />\n                <Project title={\"Water Plants Tracker\"} img={water} githubLink={\"https://github.com/BW-Water-My-Plants-1-Cori/front-end\"} liveLink={\"https://water-my-plants-ten.vercel.app/login\"} openModal={openModal} setModalType={setModalType} modalType={1} />\n                <Project title={\"Emotion Tracker\"} img={emotion} githubLink={\"https://github.com/donavynhaley/bg-emotion-tracker-fe-b\"} liveLink={\"https://b.bgexperiencetracker.dev\"} openModal={openModal} setModalType={setModalType} modalType={2} />\n\n            </div>\n        </div>\n    )\n}\n\nexport default Portfolio\n","export default __webpack_public_path__ + \"static/media/close.dc9b1dc4.svg\";","export default __webpack_public_path__ + \"static/media/chessScreen.d7f062ad.png\";","export default __webpack_public_path__ + \"static/media/waterScreen.b8f81c1a.png\";","export default __webpack_public_path__ + \"static/media/emotionScreen.2dda1c64.png\";","export default __webpack_public_path__ + \"static/media/github.fa0212fe.svg\";","export default __webpack_public_path__ + \"static/media/dev.5f5642d6.svg\";","import React, { useRef } from 'react'\nimport closeSVG from '../assets/close.svg'\nimport { useSpring, animated } from 'react-spring';\nimport Divider from \"./Divider\"\nimport chessScreen from '../assets/projects/chessScreen.png'\nimport waterScreen from '../assets/projects/waterScreen.png'\nimport emotionScreen from '../assets/projects/emotionScreen.png'\nimport githubSVG from '../assets/socials/github.svg'\nimport globeSVG from '../assets/globe.svg'\nimport devSVG from '../assets/socials/dev.svg'\nconst Modal = ({ showModal, setShowModal, modalType }) => {\n  const modalRef = useRef();\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const modals = [\n    {\n      title: \"Chess AI\",\n      desc: \"This is a solo project that I undertook to test my skills and learn more about artificial intelligence(A.I.). I was inspired after watching Google's AlphaZero A.I. beat Stockfish 8 after playing by itself for only four hours. I also wanted to give the user a visualization of what decisions the bot is making.\",\n      bullets: [\"Set out to visualize chess game logic using Chessboardjsx and Chessjs this web application allows the user to play against a chess bot and see the bot's decisions. \", \"Implemented Chess Bot using the same methodology as Stockfish, enabling the user to play against it. \", \"Integrated a tracking system using a node backend, so players can see their completed games.\"],\n      img: chessScreen,\n      technologies: [{\n        name: \"React\",\n        link: \"https://reactjs.org\",\n      },\n      {\n        name: \"Node\",\n        link: \"https://nodejs.org/en/\",\n      },\n      {\n        name: \"Chessboard.jsx\",\n        link: \"https://chessboardjsx.com\",\n      },\n      {\n        name: \"Chess.js\",\n        link: \"https://github.com/jhlywa/chess.js\",\n      },\n      {\n        name: \"Stockfish.js\",\n        link: \"https://github.com/nmrugg/stockfish.js/\",\n      }],\n      github: \"https://github.com/donavynhaley/chess-ai\",\n      live: null,\n      devto: null\n    },\n    {\n      title: \"Water My Plants\",\n      desc: \"This was a group project I did while at Lambda School to create an app from the ground up. We were given a notion document with our MVP features and stretch goals. In this project, I was the lead front-end developer. The app allows a user to log in and add their plants and the app will remind the user when to water them.\",\n      bullets: [\"Implemented redux throughout the app to handle state management.\", \"I Created a dashboard that displayed the logged-in user's plants.\", \"Designed and implemented a system in which users can easily add, delete, update their plants all integrated with our backend.\", \"Created a profile for the user to which they can make changes.\"],\n      img: waterScreen,\n      technologies: [{\n        name: \"React\",\n        link: \"https://reactjs.org\",\n      },\n      {\n        name: \"Node\",\n        link: \"https://nodejs.org/en/\",\n      },\n      {\n        name: \"Redux\",\n        link: \"https://redux.js.org\",\n      },\n      {\n        name: \"Axios\",\n        link: \"https://www.npmjs.com/package/axios\",\n      },\n      {\n        name: \"Reactstrap\",\n        link: \"https://reactstrap.github.io\",\n      },\n      {\n        name: \"Styled-Components\",\n        link: \"https://styled-components.com\",\n      },\n      {\n        name: \"Yup\",\n        link: \"https://www.npmjs.com/package/yup\",\n      },\n      {\n        name: \"Bootstrap\",\n        link: \"https://getbootstrap.com\",\n      },\n      {\n        name: \"Material-UI\",\n        link: \"https://material-ui.com\",\n      },\n      ],\n      github: \"https://github.com/BW-Water-My-Plants-1-Cori/front-end\",\n      live: \"https://water-my-plants-ten.vercel.app/login\",\n      devto: null\n    },\n    {\n      title: \"Boys & Girls Club\",\n      desc: \"This project was created with a team of eight developers over two months. Every week we met with the stakeholder to check in on project development and integrate their suggestions. The app allows staff at Boys & Girls Club to log in and adds their member's sentiment data into the app. Then an admin can log in and view that data.\",\n      bullets: [\"Implemented importing members functionality so admins can add new members to track.\", \"Created a checking function in javascript so that admins can view the uploaded members before submitting.\", \"Collaborated with a team of six to create pages in the application that allowed the user to collect sentiment data from members.\"],\n      img: emotionScreen,\n      technologies: [{\n        name: \"React\",\n        link: \"https://reactjs.org\",\n      },\n      {\n        name: \"Redux\",\n        link: \"https://redux.js.org\",\n      },\n      {\n        name: \"Axios\",\n        link: \"https://www.npmjs.com/package/axios\",\n      },\n      {\n        name: \"Ant Design\",\n        link: \"https://ant.design\",\n      },\n      {\n        name: \"Styled-Components\",\n        link: \"https://styled-components.com\",\n      },\n      ],\n      github: \"https://github.com/donavynhaley/bg-emotion-tracker-fe-b\",\n      live: \"https://b.bgexperiencetracker.dev/login\",\n      devto: \"https://dev.to/donavynhaley/my-first-lambda-labs-project-40ec\"\n    },\n    \n    ]\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n  });\n\n  const { title, desc, bullets, img, technologies, github, live, devto } = modals[modalType]\n  return (\n    <>\n      {showModal ? (\n        <div className=\"modal-background\" onClick={closeModal} ref={modalRef}>\n          <animated.div style={animation}>\n            <div className=\"modal-container\">\n              <div className=\"modal-content\">\n                <div className=\"top-modal\">\n                  <h3 className=\"section-heading top-modal\">{title}</h3>\n                  <Divider isDark={true} />\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"modal-text\">\n                    <p>{desc} </p>\n                    <ul className=\"bullet-points\">\n                      {bullets.map((item, i) => {\n                        return  <li key={i} className=\"bullets\">{item}</li>\n                      })}\n                    </ul>\n                  </div>\n                  <div className=\"img-border\">\n                    <img  alt=\"project\" src={img} />\n                    <h5>Technologies</h5>\n                    {technologies.map((item, i) => {\n                      if (technologies.length !== i + 1)\n                        return <><a key={i} href={item.link} target=\"_blank\" rel=\"noreferrer\">{item.name} </a>| </>\n                      else\n                        return <a key={i} href={item.link} target=\"_blank\" rel=\"noreferrer\">{item.name}</a>\n                    })}\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <a className=\"link\" href={github} target=\"_blank\" rel=\"noreferrer\">\n                    <img src={githubSVG} alt=\"github\" />\n                  </a>\n                  {live !== null ?\n                    <a className=\"link\" href={live} target=\"_blank\" rel=\"noreferrer\">\n                      <img src={globeSVG} alt=\"demo\" />\n                    </a> : null}\n\n                  {devto !== null ?\n                    <a className=\"link\" href={devto} target=\"_blank\" rel=\"noreferrer\">\n                      <img src={devSVG} alt=\"dev.to\" />\n                    </a> : null}\n\n                </div>\n              </div>\n              <img className=\"close-button\" src={closeSVG} alt=\"close\"\n                onClick={() => setShowModal(prev => !prev)}\n              />\n            </div>\n          </animated.div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default Modal;","import React from 'react'\nimport Divider from '../common/Divider'\nconst About = () => {\n    return (\n        <div className=\"page-section about\" id=\"about\">\n            <div className=\"about-container\">\n                <h2 className=\"section-heading text-white\"> about </h2>\n                <Divider isDark={false} />\n                <p>I'm a Full-Stack Developer located in Vancouver, WA. I have a serious passion for creating products that help people and make a difference.\n                Well-organized person, an independent employee who loves problem-solving. Fan of 3D printing, gaming, woodworking, and archery.Interested in the entire development spectrum and working on ambitious projects.</p>\n            </div>\n        </div>\n    )\n}\n\nexport default About\n","export default __webpack_public_path__ + \"static/media/check.d639b7bb.svg\";","export default __webpack_public_path__ + \"static/media/error.f4c49f9a.svg\";","import React from 'react';\nimport Divider from '../common/Divider'\nimport Button from '../common/Button'\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport checkIcon from '../assets/check.svg'\nimport errorIcon from '../assets/error.svg'\n\nconst ContactSchema = Yup.object().shape({\n    name: Yup.string()\n        .required('Name is required'),\n    email: Yup.string().email('Invalid email').required('Required'),\n    message: Yup.string()\n        .min(5, 'Message Too Short!')\n        .max(1000, 'Message Too Long! < 1000 Characters')\n        .required('Message is required'),\n});\n\nconst initialFormValues = {\n    name: '',\n    email: '',\n    message: '',\n}\n\nconst Contact = ({ toastList, setToastList, toastCount, setToastCount }) => {\n\n    const sendEmail = (values) => {\n        // Shaping data to send to backend\n        const data = {\n            service_id: process.env.REACT_APP_SERVICE_ID,\n            template_id: process.env.REACT_APP_TEMPLATE_ID,\n            user_id: process.env.REACT_APP_USER_ID,\n            template_params: {\n                'name': values.name,\n                'email': values.email,\n                'message': values.message,\n            }\n        }\n\n        axios.post('https://api.emailjs.com/api/v1.0/email/send', data)\n            .then(function (response) {\n                // upon sucess adds toast notification\n                addToast(true)\n            })\n            .catch(function (error) {\n                addToast(false);\n            });\n    }\n\n    const addToast = (isSuccess) => {\n        let toast = {}\n        if (isSuccess) {\n            toast = {\n                id: toastCount,\n                title: 'Success',\n                description: 'Message sent!',\n                backgroundColor: '#5cb85c',\n                icon: checkIcon\n            }\n        }\n        else {\n            toast = {\n                id: toastCount,\n                title: 'Failed',\n                description: 'Something went wrong. Please try again later',\n                backgroundColor: '#5cb85c',\n                icon: errorIcon\n            }\n        }\n        const newToastList = toastList;\n        newToastList.push(toast)\n        setToastList(newToastList)\n        setToastCount(toastCount + 1)\n\n    }\n\n    const resetForm = (values) => {\n        Object.keys(values).forEach(key => (values[key] = \"\"));  //<- Reseting all fields using blank space\n    }\n\n    return (\n        <section className=\"page-section contact\" id=\"contact\">\n            <h2 className=\"section-heading\" >Contact</h2>\n            <Divider isDark={true} />\n            <div className=\"form-container\">\n                <Formik\n                    initialValues={initialFormValues}\n                    validationSchema={ContactSchema}\n                    onSubmit={values => {\n                        sendEmail(values)\n                        resetForm(values)\n                    }}\n                >\n                    {({ errors, touched }) => (\n                        <Form className=\"form\">\n                            <div className=\"form-group\">\n                                <Field name=\"name\" className={`input ${errors.name && touched.name ? \"input-error\" : \"\"}`} placeholder=\"Name\" />\n                                {errors.name && touched.name ? (\n                                    <div className=\"error\">{errors.name}</div>\n                                ) : null}\n                            </div>\n                            <div className=\"form-group\">\n                                <Field name=\"email\" type=\"email\" className={`input ${errors.email && touched.namemaile ? \"input-error\" : \"\"}`} placeholder=\"Email\" />\n                                {errors.email && touched.email ? <div className=\"error\">{errors.email}</div> : null}\n                            </div>\n                            <div className=\"form-group\">\n                                <Field as=\"textarea\" name=\"message\" className={`input ${errors.message && touched.message ? \"input-error\" : \"\"}`} placeholder=\"Message\" id=\"message-input\" />\n                                {errors.message && touched.message ? (\n                                    <div className=\"error\">{errors.message}</div>\n                                ) : null}\n                            </div>\n                            <Button type=\"submit\" text=\"Send\" addClass=\"xl\" />\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </section>\n    )\n}\n\nexport default Contact\n","import React from 'react'\n\nconst Toast = ({ toastList, setToastList }) => {\n\n    const handleClose = (id) => {\n        setToastList(toastList.filter((toast) => {\n            return toast.id !== id;\n        }))\n    }\n\n    return (\n        <div className=\"notification-container\">\n            {\n                toastList.map((toast, i) =>\n                    <div\n                        key={i}\n                        className=\"notification toast\"\n                    >\n                        <button onClick={() => handleClose(toast.id)}>X</button>\n                        <div className=\"notification-image\">\n                            <img src={toast.icon} alt=\"\" />\n                        </div>\n                        <div>\n                            <p className=\"notification-title\">{toast.title}</p>\n                            <p className=\"notification-message\">\n                                {toast.description}\n                            </p>\n                        </div>\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n\nexport default Toast\n","export default __webpack_public_path__ + \"static/media/linkedin.3ab0008f.svg\";","import React from 'react'\nimport githubSVG from '../assets/socials/github.svg'\nimport linkedinSVG from '../assets/socials/linkedin.svg'\nimport devSVG from '../assets/socials/dev.svg'\nconst Footer = () => {\n    return (\n        <>\n            <div className=\"footer\">\n                <div className=\"footer-contents\">\n                    <div className=\"socials\">\n                        <h4>Socials</h4>\n                        <div className=\"links\">\n                            <a className=\"link\" href=\"https://github.com/donavynhaley\" target=\"_blank\" rel=\"noreferrer\">\n                                <img src={githubSVG} alt=\"github\" />\n                            </a>\n                            <a className=\"link\" href=\"https://www.linkedin.com/in/donavynhaley/\" target=\"_blank\" rel=\"noreferrer\">\n                                <img src={linkedinSVG} alt=\"linkedin\" />\n                            </a>\n                            <a className=\"link\" href=\"https://dev.to/donavynhaley\" target=\"_blank\" rel=\"noreferrer\">\n                                <img src={devSVG} alt=\"dev.to\" />\n                            </a>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"acknowledgements\">\n                <div>Icons made by <a href=\"https://www.flaticon.com/authors/pixel-perfect\" title=\"Pixel perfect\">Pixel perfect</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n            </div>\n        </>\n    )\n}\n\nexport default Footer\n","import React, { useState } from 'react';\nimport Navbar from './sections/Navbar';\nimport Home from './sections/Home'\nimport Portfolio from \"./sections/Portfolio\";\nimport Modal from './common/Modal'\nimport About from './sections/About'\nimport Contact from './sections/Contact'\nimport Toast from './common/Toast'\nimport Footer from './sections/Footer'\n\nfunction App() {\n  const [showModal, setShowModal] = useState(false)\n  const [modalType, setModalType] = useState(0)\n\n  const openModal = () => {\n    setShowModal(!showModal)\n  }\n  const [toastList, setToastList] = useState([]);\n  const [toastCount, setToastCount] = useState(0)\n\n  return (\n    <>\n      <div className=\"container\">\n        {showModal ? <div className=\"modal-backdrop\" /> : null}\n\n        <Navbar />\n        <Home />\n        <Portfolio openModal={openModal} setModalType={setModalType} />\n        <About />\n        <Contact toastList={toastList} setToastList={setToastList} toastCount={toastCount} setToastCount={setToastCount} />\n        <Footer />\n      </div>\n      <Toast toastList={toastList} setToastList={setToastList} />\n      <Modal showModal={showModal} setShowModal={setShowModal} modalType={modalType} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nrequire('dotenv').config()\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}